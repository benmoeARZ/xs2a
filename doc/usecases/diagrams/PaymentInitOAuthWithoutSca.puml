@startuml

title OAuth Approach without SCA

participant PSU as psu
participant TPP as tpp
participant XS2A as xs2a
participant SPI as spi
participant CMS as cms
participant IDP as idp
participant "Core Banking" as cbs

== Initiate Payment ==

psu -> tpp: initiate payment
activate tpp
activate psu
tpp -> xs2a: initiate payment\nPSU data and TPP data with token\nREST Call Initiate payment\nPOST "/v1/payments/{payment-product}"
activate xs2a
xs2a -> spi: Java Call SPIinitiatePayment
activate spi
|||
alt 'Sca Exempted' = TRUE
|||
spi-->xs2a: SpiSinglePaymentInitiationResponse\n'scaExempted=true'
|||
xs2a->spi: executePaymentWithoutSca
|||
spi->idp: executePaymentWithoutSca
|||
idp->cbs: executePaymentWithoutSca
|||
else 'Sca Exempted' = FALSE
|||
spi->xs2a: SpiSinglePaymentInitiationResponse\n'scaExempted=false'
|||
deactivate spi
|||
xs2a-->tpp:Payment initiation response + PaymentID
deactivate xs2a
|||
tpp->xs2a: REST Call Initiate authorithation \nPOST"/v1/{payment-service }/{payment-product}/\n{paymentId}/authorisations"
activate xs2a
note left
         in case of Multilevel SCA
         the authorisation steps
         should be repeated for other PSU
end note
|||
xs2a-->tpp:Start authorisation response\n"link_scaRedirect"
deactivate xs2a
|||
tpp --> psu: Feedback to the customer\nAuthorise the transaction
psu -> idp: login + SCA (with PaymentID)
activate idp
idp -> cms: REST Call GetPaymentByRedirectId\n"GET/psu-api/v1/payment/redirect/{redirect-id}"
activate cms
cms-->idp: CmsPaymentResponse
|||
idp->cms: REST Call UpdatePsuIdPayment\n"PUT/psu-api/v1/payment/authorithation/\n{authorisation-id}/psu-data"
|||
cms-->idp: Response "http Codes: 200 successful or 400 error"
deactivate cms
|||
idp-->psu: Authorisation Process Response
deactivate idp
|||
psu->idp: The psu Authorises the Payment
activate idp
|||
idp->cms: REST Call UpdateAuthorisationStatus\n"PUT/psu-api/v1/payment/{payment-id}/authorisation/\n{authorisation-id}/status/{status}"
activate cms
|||
cms-->idp: Response "http Codes: 200 successful or 400 error"
deactivate cms
idp->cbs: Execute Payment
activate cbs
|||
cbs-->idp: Response PaymentStatus
deactivate cbs
idp->cms: REST Call UpdatePaymentStatus\n"PUT/psu-api/v1/payment/{payment-id}/status/{status}"
activate cms
|||
cms-->idp: Response "http Codes: 200 successful or 400 error"
deactivate cms
|||
idp --> psu: Payment confirmed
|||
end
deactivate psu
deactivate tpp
deactivate idp
psu->tpp: Redirect back to tpp
deactivate psu
activate tpp
|||
tpp->xs2a: REST Call get payment status\n"GET/v1/{payment-service}/{paymentId}/status"
activate xs2a
|||
xs2a->cms: REST Call GetPaymentById
activate cms
|||
cms-->xs2a: Payment Object Response
deactivate cms
|||
xs2a->spi: Java Call SPI GetPaymentStatusByid
activate spi
|||
spi->cbs: GetPaymentStatusById
activate cbs
|||
cbs-->spi: Transaction Status Response + Sca Exempted Status
deactivate cbs
|||
spi-->xs2a: Transaction Status Response\n+ Sca Exempted Status
deactivate spi
|||
xs2a->cms: REST Call UpdateTransactionStatus
activate cms
|||
cms->xs2a: UpdateTransactionStatus Response
deactivate cms
|||
xs2a-->tpp: Transaction Status Response\n+ Sca Exempted Status
deactivate xs2a
|||
tpp->xs2a: REST Call Get Payment Request "GET/v1/\n{payment-service}/{paymentId}"
deactivate tpp
activate xs2a
xs2a->cms: REST Call GetPaymentById
activate cms
|||
cms-->xs2a: Payment Object Response
deactivate cms
|||
xs2a->spi: Java Call SPIGetPaymentbyId
activate spi
|||
spi->cbs: GetPaymentById
activate cbs
|||
cbs-->spi: Payment Object Response
deactivate cbs
spi-->xs2a: SpiSinglrPayment /\nSpiPeriodicPayment /\nSpiBulkPayment /\nSpiPaymentInfo
deactivate spi
|||
xs2a->cms: REST Call UpdatePayment
activate cms
|||
cms-->xs2a: UpdatePayment Response
deactivate cms
|||
xs2a-->tpp: Get Payment Response
deactivate xs2a
activate tpp
|||
tpp->xs2a: REST Call Get Authorisation Sub-resources\n"GET/v1/{payment-service}/{payment-product}\n/{paymentId/authorisations}"
activate xs2a
|||
xs2a->cms: GetAuthorisationsByPaymentId
activate cms
|||
cms-->xs2a: GetAuthorisationsByPaymentId Response
deactivate xs2a
xs2a-->tpp: Authorisation Ids List
|||
tpp->xs2a: REST Call Get Authorisation\n"GET/v1/{payment-service}/{payment-product}/\n{paymentId/authorisations}/{authorithationId}"
xs2a->cms: GetAuthorisationScaStatus
activate cms
|||
cms-->xs2a: GetAuthorisationScaStatus Response
deactivate cms
xs2a-->tpp: Sca Status
deactivate xs2a
deactivate tpp
@enduml


